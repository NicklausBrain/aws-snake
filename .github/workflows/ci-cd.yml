# This is a basic workflow to help you get started with Actions

name: CI-CD
env:
  node-version: 14.x

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# This workflow contains 3 phases: build, deploy-test, deploy-prod
jobs:

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}

      - name: install aws cdk
        run: npm install -g aws-cdk

      - name: install node modules
        run: npm install
        working-directory: ./snake-iac

      - name: get existing stacks
        run: cdk list
        working-directory: ./snake-iac

      - name: generate CloudFormation template
        run: cdk synthesize
        working-directory: ./snake-iac

  deploy-test:
    needs: [build]
    environment: test
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo DEPLOY TEST!

  deploy-prod:
    if: ${{ github.ref == 'refs/heads/main' }} # main branch only
    needs: [deploy-test]
    environment: prod
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo DEPLOY PROD!
